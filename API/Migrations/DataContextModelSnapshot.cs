// <auto-generated />
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("API.Entity.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description 1",
                            ImageUrl = "https://example.com/image1.jpg",
                            IsActive = true,
                            Name = "Product 1",
                            Price = 10.0m,
                            Stock = 100
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description 2",
                            ImageUrl = "https://example.com/image2.jpg",
                            IsActive = true,
                            Name = "Product 2",
                            Price = 20.0m,
                            Stock = 200
                        },
                        new
                        {
                            Id = 3,
                            Description = "Description 3",
                            ImageUrl = "https://example.com/image3.jpg",
                            IsActive = true,
                            Name = "Product 3",
                            Price = 30.0m,
                            Stock = 300
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
